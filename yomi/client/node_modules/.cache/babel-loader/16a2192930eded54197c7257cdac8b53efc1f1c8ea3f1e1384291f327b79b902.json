{"ast":null,"code":"var _jsxFileName = \"D:\\\\source\\\\repos\\\\Yomi\\\\JapaneseReadingWebsite\\\\yomi\\\\client\\\\src\\\\components\\\\Quiz.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport Button from '@mui/material/Button';\nimport '../index.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Quiz({\n  word,\n  answers,\n  current_num,\n  answeredQs,\n  onAnsweredQ\n}) {\n  _s();\n  const [message, setMessage] = useState(/*#__PURE__*/_jsxDEV(\"h3\", {\n    children: /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 6,\n      columnNumber: 48\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 6,\n    columnNumber: 44\n  }, this));\n\n  // clicking an answer choice\n  const handleClick = ans => {\n    if (answeredQs <= current_num) {\n      // if current q is not finished\n      if (ans === word.English) {\n        setCorrect(ans);\n        onAnsweredQ();\n      } else {\n        setMessage(/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: [/*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 16,\n            columnNumber: 32\n          }, this), \"Wrong! Try Again\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 16,\n          columnNumber: 28\n        }, this));\n      }\n    }\n  };\n  const setEmpty = () => {\n    setMessage(/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: [\"\\u3000\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 25\n      }, this), \"\\u3000\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 20\n    }, this));\n  };\n  const setCorrect = ans => {\n    setMessage(/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: [ans, /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 29\n      }, this), \"Correct! Good Job\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 20\n    }, this)); // 1 is true\n  };\n\n  // reset the message when moving between questions (when current_num changes)\n  useEffect(() => {\n    answeredQs > current_num ? setCorrect() : setEmpty();\n  }, [current_num]);\n\n  // button component\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"question\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: [word.kanji, \"\\xA0\", word.kana]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 13\n    }, this), answers.map(answer => /*#__PURE__*/_jsxDEV(Button, {\n      variant: \"contained\",\n      onClick: () => handleClick(answer),\n      children: answer\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 38\n    }, this)), message]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 9\n  }, this);\n}\n_s(Quiz, \"vv1QZH5sSq4nlO0483SssNGOf9o=\");\n_c = Quiz;\nexport default Quiz;\nvar _c;\n$RefreshReg$(_c, \"Quiz\");","map":{"version":3,"names":["React","useState","useEffect","Button","jsxDEV","_jsxDEV","Quiz","word","answers","current_num","answeredQs","onAnsweredQ","_s","message","setMessage","children","fileName","_jsxFileName","lineNumber","columnNumber","handleClick","ans","English","setCorrect","setEmpty","className","kanji","kana","map","answer","variant","onClick","_c","$RefreshReg$"],"sources":["D:/source/repos/Yomi/JapaneseReadingWebsite/yomi/client/src/components/Quiz.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport Button from '@mui/material/Button';\r\nimport '../index.css';\r\n\r\nfunction Quiz({ word, answers, current_num, answeredQs, onAnsweredQ }) {\r\n    const [message, setMessage] = useState(<h3><br/></h3>);\r\n\r\n    // clicking an answer choice\r\n    const handleClick = (ans) => {\r\n        if (answeredQs <= current_num) { // if current q is not finished\r\n            if (ans === word.English) {\r\n                setCorrect(ans);\r\n                onAnsweredQ();\r\n            }\r\n            else {\r\n                setMessage(<h3><br/>Wrong! Try Again</h3>);\r\n            }\r\n        }\r\n    };\r\n\r\n    const setEmpty = () => {\r\n        setMessage(<h3>　<br/>　</h3>);\r\n    }\r\n\r\n    const setCorrect = (ans) => {\r\n        setMessage(<h3>{ans}<br/>Correct! Good Job</h3>); // 1 is true\r\n    }\r\n\r\n    // reset the message when moving between questions (when current_num changes)\r\n    useEffect(() => {answeredQs > current_num ? setCorrect() : setEmpty()}, [current_num]); \r\n\r\n    // button component\r\n    return (\r\n        <div className=\"question\">\r\n            <h2>{word.kanji}&nbsp;{word.kana}</h2>\r\n            {answers.map((answer) => <Button variant=\"contained\" onClick={() => handleClick(answer)}>{answer}</Button>)}\r\n            {message}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Quiz;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}