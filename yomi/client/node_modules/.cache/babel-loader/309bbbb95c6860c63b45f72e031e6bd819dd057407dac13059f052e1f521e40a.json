{"ast":null,"code":"var _jsxFileName = \"D:\\\\source\\\\repos\\\\Yomi\\\\JapaneseReadingWebsite\\\\yomi\\\\client\\\\src\\\\components\\\\Flashcard.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { useState } from 'react';\nimport '../index.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Flashcard({\n  frontContent,\n  backContent\n}) {\n  _s();\n  // state to keep track of whether the card is flipped\n  const [isFlipped, setIsFlipped] = useState(false);\n\n  // on click, flip the card\n  const handleClick = () => {\n    setIsFlipped(!isFlipped);\n  };\n\n  // Flashcard component\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"card\",\n    onClick: handleClick,\n    children: isFlipped ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"card-back\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"card-content\",\n        children: backContent\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 17\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"card-front\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"card-content\",\n        children: frontContent\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 17\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 15,\n    columnNumber: 9\n  }, this);\n}\n_s(Flashcard, \"9NPh+N5IPOCpZ+AUtVyw7TZ32I8=\");\n_c = Flashcard;\nfunction FlashcardSet({\n  cards\n}) {\n  _s2();\n  const [currentIndex, setCurrentIndex] = useState(0);\n  const nextCard = () => {\n    setCurrentIndex(prevIndex => (prevIndex + 1) % cards.length);\n  };\n  const prevCard = () => {\n    setCurrentIndex(prevIndex => prevIndex === 0 ? cards.length - 1 : prevIndex - 1);\n  };\n  const setFirstCard = () => {\n    setCurrentIndex(0);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Flashcard, {\n      frontContent: cards[currentIndex].front,\n      backContent: cards[currentIndex].back\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: prevCard,\n      children: \"Prev\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: nextCard,\n      children: \"Next\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: setFirstCard,\n      children: \"Reset to First\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 9\n  }, this);\n}\n_s2(FlashcardSet, \"tusBbsahUVevXfyh6oH5R6YDC9Q=\");\n_c2 = FlashcardSet;\nexport { Flashcard, FlashcardSet };\nvar _c, _c2;\n$RefreshReg$(_c, \"Flashcard\");\n$RefreshReg$(_c2, \"FlashcardSet\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","Flashcard","frontContent","backContent","_s","isFlipped","setIsFlipped","handleClick","className","onClick","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","FlashcardSet","cards","_s2","currentIndex","setCurrentIndex","nextCard","prevIndex","length","prevCard","setFirstCard","front","back","_c2","$RefreshReg$"],"sources":["D:/source/repos/Yomi/JapaneseReadingWebsite/yomi/client/src/components/Flashcard.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport '../index.css';\r\n\r\nfunction Flashcard({ frontContent, backContent }) {\r\n    // state to keep track of whether the card is flipped\r\n    const [isFlipped, setIsFlipped] = useState(false);\r\n\r\n    // on click, flip the card\r\n    const handleClick = () => {\r\n        setIsFlipped(!isFlipped);\r\n    };\r\n\r\n    // Flashcard component\r\n    return (\r\n        <div className=\"card\" onClick={handleClick}>\r\n            {isFlipped ? (\r\n                <div className=\"card-back\">\r\n                    <div className=\"card-content\">{backContent}</div>\r\n                </div>\r\n            ) : (\r\n                <div className=\"card-front\">\r\n                    <div className=\"card-content\">{frontContent}</div>\r\n                </div>\r\n            )}\r\n        </div>\r\n    );\r\n}\r\n\r\nfunction FlashcardSet({ cards }) {\r\n    const [currentIndex, setCurrentIndex] = useState(0);\r\n    const nextCard = () => {\r\n        setCurrentIndex((prevIndex) => (prevIndex + 1) % cards.length);\r\n    };\r\n    const prevCard = () => {\r\n        setCurrentIndex((prevIndex) => (prevIndex === 0 ? cards.length - 1 : prevIndex - 1));\r\n    };\r\n\r\n    const setFirstCard = () => {\r\n        setCurrentIndex(0);\r\n\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <Flashcard\r\n                frontContent={cards[currentIndex].front}\r\n                backContent={cards[currentIndex].back}\r\n            />\r\n            <button onClick={prevCard}>Prev</button>\r\n            <button onClick={nextCard}>Next</button>\r\n            <button onClick={setFirstCard}>Reset to First</button>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport { Flashcard, FlashcardSet };\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}