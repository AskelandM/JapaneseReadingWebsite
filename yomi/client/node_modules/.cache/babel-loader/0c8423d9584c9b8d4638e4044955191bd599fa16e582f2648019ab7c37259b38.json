{"ast":null,"code":"var _jsxFileName = \"D:\\\\source\\\\repos\\\\Yomi\\\\JapaneseReadingWebsite\\\\yomi\\\\client\\\\src\\\\components\\\\Flashcard.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$(),\n  _s3 = $RefreshSig$();\nimport React, { useState } from 'react';\nimport '../index.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport function Flashcard({\n  frontContent,\n  backContent\n}) {\n  _s();\n  // state to keep track of whether the card is flipped\n  const [isFlipped, setIsFlipped] = useState(false);\n\n  // on click, flip the card\n  const handleClick = () => {\n    setIsFlipped(!isFlipped);\n  };\n\n  // Flashcard component\n  // If the card is flipped, show the back content\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"card\",\n    onClick: handleClick,\n    children: isFlipped ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"card-back\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"card-content-back\",\n        children: backContent\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 17\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"card-front\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"card-content-front\",\n        children: frontContent\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 17\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 16,\n    columnNumber: 9\n  }, this);\n}\n_s(Flashcard, \"9NPh+N5IPOCpZ+AUtVyw7TZ32I8=\");\n_c = Flashcard;\nexport function IconToggle() {\n  _s2();\n  const images = ['yomi/client/src/icons/back_toggle.png', 'yomi/client/src/icons/front_toggle.png'];\n  const [currentImage, setCurrentImage] = useState(0);\n  const toggleImage = () => {\n    setCurrentImage(prevImage => (prevImage + 1) % images.length);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"img\", {\n      src: images[currentImage],\n      onClick: toggleImage,\n      alt: \"toggle\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 9\n  }, this);\n}\n_s2(IconToggle, \"cnc9rbhP80fTHOrqNEzwhjBY+h0=\");\n_c2 = IconToggle;\nexport function FlashcardSet({\n  cards\n}) {\n  _s3();\n  const [currentIndex, setCurrentIndex] = useState(0);\n  const nextCard = () => {\n    setCurrentIndex(prevIndex => (prevIndex + 1) % cards.length);\n  };\n  const prevCard = () => {\n    setCurrentIndex(prevIndex => prevIndex === 0 ? cards.length - 1 : prevIndex - 1);\n  };\n  const setFirstCard = () => {\n    setCurrentIndex(0);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Flashcard, {\n      frontContent: cards[currentIndex].front,\n      backContent: cards[currentIndex].back\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: prevCard,\n      class: \"prev\",\n      children: \"Prev\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: nextCard,\n      class: \"next\",\n      children: \"Next\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: setFirstCard,\n      class: \"setFirst\",\n      children: \"Reset to First\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 65,\n    columnNumber: 9\n  }, this);\n}\n_s3(FlashcardSet, \"tusBbsahUVevXfyh6oH5R6YDC9Q=\");\n_c3 = FlashcardSet;\nvar _c, _c2, _c3;\n$RefreshReg$(_c, \"Flashcard\");\n$RefreshReg$(_c2, \"IconToggle\");\n$RefreshReg$(_c3, \"FlashcardSet\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","Flashcard","frontContent","backContent","_s","isFlipped","setIsFlipped","handleClick","className","onClick","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","IconToggle","_s2","images","currentImage","setCurrentImage","toggleImage","prevImage","length","src","alt","_c2","FlashcardSet","cards","_s3","currentIndex","setCurrentIndex","nextCard","prevIndex","prevCard","setFirstCard","front","back","class","_c3","$RefreshReg$"],"sources":["D:/source/repos/Yomi/JapaneseReadingWebsite/yomi/client/src/components/Flashcard.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport '../index.css';\r\n\r\nexport function Flashcard({ frontContent, backContent }) {\r\n    // state to keep track of whether the card is flipped\r\n    const [isFlipped, setIsFlipped] = useState(false);\r\n\r\n    // on click, flip the card\r\n    const handleClick = () => {\r\n        setIsFlipped(!isFlipped);\r\n    };\r\n\r\n    // Flashcard component\r\n    // If the card is flipped, show the back content\r\n    return (\r\n        <div className=\"card\" onClick={handleClick}>\r\n            {isFlipped ? (\r\n                <div className=\"card-back\">\r\n                    <div className=\"card-content-back\">{backContent}</div>\r\n                </div>\r\n            ) : (\r\n                <div className=\"card-front\">\r\n                    <div className=\"card-content-front\">{frontContent}</div>\r\n                </div>\r\n            )}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport function IconToggle() {\r\n    const images = [\r\n        'yomi/client/src/icons/back_toggle.png',\r\n        'yomi/client/src/icons/front_toggle.png'\r\n    ];\r\n\r\n    const [currentImage, setCurrentImage] = useState(0);\r\n\r\n    const toggleImage = () => {\r\n        setCurrentImage((prevImage) => (prevImage + 1) % images.length);\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            <img src={images[currentImage]} onClick={toggleImage} alt=\"toggle\"/>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport function FlashcardSet({ cards }) {\r\n    const [currentIndex, setCurrentIndex] = useState(0);\r\n    \r\n    const nextCard = () => {\r\n        setCurrentIndex((prevIndex) => (prevIndex + 1) % cards.length);\r\n    };\r\n\r\n    const prevCard = () => {\r\n        setCurrentIndex((prevIndex) => (prevIndex === 0 ? cards.length - 1 : prevIndex - 1));\r\n    };\r\n\r\n    const setFirstCard = () => {\r\n        setCurrentIndex(0);\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <Flashcard\r\n                frontContent={cards[currentIndex].front}\r\n                backContent={cards[currentIndex].back}\r\n            />\r\n            <button onClick={prevCard} class=\"prev\">Prev</button>\r\n            <button onClick={nextCard} class=\"next\">Next</button>\r\n            <button onClick={setFirstCard} class=\"setFirst\">Reset to First</button>\r\n        </div>\r\n    );\r\n}\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}