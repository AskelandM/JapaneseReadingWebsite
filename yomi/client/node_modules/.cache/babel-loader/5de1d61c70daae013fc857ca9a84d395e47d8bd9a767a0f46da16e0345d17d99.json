{"ast":null,"code":"var _jsxFileName = \"D:\\\\source\\\\repos\\\\Yomi\\\\JapaneseReadingWebsite\\\\yomi\\\\client\\\\src\\\\pages\\\\Sentences.js\",\n  _s = $RefreshSig$();\nimport Switch from '@mui/material/Switch';\nimport FormControlLabel from '@mui/material/FormControlLabel';\nimport React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Sentences() {\n  _s();\n  const [loading, setLoading] = useState(false);\n  const [posts, setPosts] = useState([]); // returned sentences\n  const [txt, setTxt] = useState(\"\"); // text in textbox\n  const [query, setQuery] = useState(\"\"); // final submitted text\n  const [fromEn, setFromEn] = useState(false); // query in english?\n  const nomargin = `\n        .nomargin {\n            margin-bottom: 0px;\n            padding: 0px;\n        }\n    `;\n  useEffect(() => {\n    const loadPost = async () => {\n      // Till the data is fetch using API \n      // the Loading page will show. \n      setLoading(true);\n\n      // Await make wait until that \n      // promise settles and return its result \n      const response = await axios.get(\"https://tatoeba.org/eng/api_v0/search?from=\" + (fromEn ? \"eng\" : \"jpn\") + \"&has_audio=&list=&native=&original=&orphans=no&query=\" + query + \"&sort=relevance&sort_reverse=&tags=&to=\" + (fromEn ? \"jpn\" : \"eng\") + \"&trans_filter=limit&trans_has_audio=&trans_link=&trans_orphan=&trans_to=\" + (fromEn ? \"jpn\" : \"eng\") + \"&trans_unapproved=&trans_user=&unapproved=no&user=&word_count_max=&word_count_min=1\");\n\n      // After fetching data stored it in posts state. \n      setPosts(response.data);\n\n      // Closed the loading page \n      setLoading(false);\n    };\n\n    // Call the function \n    if (query != \"\") {\n      loadPost();\n    }\n  }, [query]);\n  useEffect(() => {\n    console.log(posts);\n  }, [posts]);\n  function handleSubmit(e) {\n    e.preventDefault();\n    setQuery(txt);\n  }\n  function handleChange(e) {\n    setTxt(e.target.value);\n    setQuery(\"\");\n  }\n  function handleSwitch(event) {\n    setFromEn(event.target.checked);\n    setTxt(\"\");\n    setQuery(\"\");\n  }\n\n  // contents of search bar go into API req\n  // contents of API req (JSON) get displayed on page\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Example Sentence Search\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Add terms here: \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        value: txt,\n        onInput: handleChange,\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 17\n      }, this), \"\\xA0\", /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(FormControlLabel, {\n      control: /*#__PURE__*/_jsxDEV(Switch, {\n        checked: fromEn,\n        onChange: handleSwitch\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 40\n      }, this),\n      label: \"Japanese/English\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 13\n    }, this), loading || posts.length === 0 ? loading ? /*#__PURE__*/_jsxDEV(\"h4\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 28\n    }, this) : \"\" : posts.results.map(item =>\n    /*#__PURE__*/\n    // fetch the text and translation\n    _jsxDEV(\"div\", {\n      children: item.translations.length > 0 ? /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n          children: item.text\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 29\n        }, this), item.translations.map(trans => trans.length > 0 ? /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"nomargin\",\n          children: [/*#__PURE__*/_jsxDEV(\"style\", {\n            children: nomargin\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 92,\n            columnNumber: 57\n          }, this), trans[0].text]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 33\n        }, this) : \"\")]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 26\n      }, this) : \" \"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 21\n    }, this)), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"all sentences are acquired through the \", /*#__PURE__*/_jsxDEV(\"a\", {\n        href: \"https://tatoeba.org/ja/\",\n        children: \"Tatoeba project\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 55\n      }, this), \".\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 68,\n    columnNumber: 9\n  }, this);\n}\n_s(Sentences, \"t8URZGe87Z4NDCyY0M41ChHQwPo=\");\n_c = Sentences;\n;\nexport default Sentences;\nvar _c;\n$RefreshReg$(_c, \"Sentences\");","map":{"version":3,"names":["Switch","FormControlLabel","React","useState","useEffect","axios","jsxDEV","_jsxDEV","Sentences","_s","loading","setLoading","posts","setPosts","txt","setTxt","query","setQuery","fromEn","setFromEn","nomargin","loadPost","response","get","data","console","log","handleSubmit","e","preventDefault","handleChange","target","value","handleSwitch","event","checked","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","onInput","required","type","control","onChange","label","length","results","map","item","translations","text","trans","className","href","_c","$RefreshReg$"],"sources":["D:/source/repos/Yomi/JapaneseReadingWebsite/yomi/client/src/pages/Sentences.js"],"sourcesContent":["import Switch from '@mui/material/Switch';\r\nimport FormControlLabel from '@mui/material/FormControlLabel';\r\nimport React, { useState, useEffect } from \"react\"; \r\nimport axios from \"axios\"; \r\n\r\nfunction Sentences () {\r\n\r\n    const [loading, setLoading] = useState(false); \r\n    const [posts, setPosts] = useState([]); // returned sentences\r\n    const [txt, setTxt] = useState(\"\"); // text in textbox\r\n    const [query, setQuery] = useState(\"\"); // final submitted text\r\n    const [fromEn, setFromEn] = useState(false); // query in english?\r\n    const nomargin = `\r\n        .nomargin {\r\n            margin-bottom: 0px;\r\n            padding: 0px;\r\n        }\r\n    `\r\n  \r\n    useEffect(() => { \r\n        const loadPost = async () => { \r\n            // Till the data is fetch using API \r\n            // the Loading page will show. \r\n            setLoading(true); \r\n  \r\n            // Await make wait until that \r\n            // promise settles and return its result \r\n            const response = await axios.get( \r\n                \"https://tatoeba.org/eng/api_v0/search?from=\" + (fromEn ? \"eng\" : \"jpn\") + \"&has_audio=&list=&native=&original=&orphans=no&query=\" + query + \"&sort=relevance&sort_reverse=&tags=&to=\" + (fromEn ? \"jpn\" : \"eng\") + \"&trans_filter=limit&trans_has_audio=&trans_link=&trans_orphan=&trans_to=\" + (fromEn ? \"jpn\" : \"eng\") + \"&trans_unapproved=&trans_user=&unapproved=no&user=&word_count_max=&word_count_min=1\"\r\n            ); \r\n  \r\n            // After fetching data stored it in posts state. \r\n            setPosts(response.data); \r\n  \r\n            // Closed the loading page \r\n            setLoading(false); \r\n        }; \r\n  \r\n        // Call the function \r\n        if (query != \"\") {\r\n            loadPost(); \r\n        }\r\n    }, [query]); \r\n\r\n    useEffect(() => {\r\n        console.log(posts)\r\n    }, [posts]);\r\n\r\n    function handleSubmit(e) {\r\n        e.preventDefault();\r\n        setQuery(txt);\r\n    }\r\n\r\n    function handleChange(e) {\r\n        setTxt(e.target.value);\r\n        setQuery(\"\");\r\n    }\r\n\r\n    function handleSwitch(event) {\r\n        setFromEn(event.target.checked);\r\n        setTxt(\"\");\r\n        setQuery(\"\");\r\n    }\r\n\r\n    // contents of search bar go into API req\r\n    // contents of API req (JSON) get displayed on page\r\n    return (\r\n        <div>\r\n            <h2>Example Sentence Search</h2>\r\n            <form onSubmit={handleSubmit}>\r\n                <label>Add terms here: </label>\r\n                <input\r\n                    value={txt}\r\n                    onInput={handleChange}\r\n                    required\r\n                />\r\n                &nbsp;\r\n                <button type=\"submit\">Submit</button>\r\n            </form>\r\n            <FormControlLabel control={<Switch checked={fromEn} onChange={handleSwitch} />} label=\"Japanese/English\" />\r\n            <hr/>\r\n            {loading || posts.length === 0 ? ( \r\n                loading ? (<h4>Loading...</h4> ) : \"\"\r\n            ) : ( \r\n                posts.results.map((item) => ( \r\n                    // fetch the text and translation\r\n                    <div>\r\n                    {item.translations.length > 0 ?\r\n                        (<div>\r\n                            <h4>{item.text}</h4>\r\n                            {item.translations.map((trans) => (trans.length > 0 ? (\r\n                                <p className='nomargin'><style>{nomargin}</style>\r\n                                {trans[0].text}</p>)\r\n                                 : \"\"))}\r\n                        </div>)\r\n                    : \" \"}\r\n                    </div>\r\n                )) \r\n            )}\r\n            <hr/>\r\n            <p>all sentences are acquired through the <a href=\"https://tatoeba.org/ja/\">Tatoeba project</a>.</p>\r\n        </div>\r\n    );\r\n};\r\n\r\n\r\nexport default Sentences;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}