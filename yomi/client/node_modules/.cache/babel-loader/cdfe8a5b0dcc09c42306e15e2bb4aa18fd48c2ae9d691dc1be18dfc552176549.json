{"ast":null,"code":"var _jsxFileName = \"D:\\\\source\\\\repos\\\\Yomi\\\\JapaneseReadingWebsite\\\\yomi\\\\client\\\\src\\\\pages\\\\Flashcards.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { Flashcard } from '../components/Flashcard.js';\nimport '../flashcard.css';\nimport { ToggleButton } from '@mui/material';\nimport front_toggle_image from '../icons/front_toggle.png';\nimport back_toggle_image from '../icons/back_toggle.png';\nimport shuffle_icon from '../icons/shuffle_icon.png';\nimport shuffle_on_icon from '../icons/shuffle_on_icon.png';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport function Flashcards() {\n  _s();\n  // when shuffled, change the flashcards to a new set that is shuffled randomely. \n  // when shuffle toggled off, return to normal flashcards logic\n  // change flashcard logic so that the front of a flashcard can show up to 3 different japanese alphabets\n\n  // replace this logic with database calls to get the flashcards\n  const initialFlashcards = [{\n    front: \"ichi\",\n    back: \"one\"\n  }, {\n    front: \"ni\",\n    back: \"two\"\n  }, {\n    front: \"san\",\n    back: \"three\"\n  }, {\n    front: \"shi\",\n    back: \"four\"\n  }, {\n    front: \"go\",\n    back: \"five\"\n  }];\n\n  // controls which flashcard is shown\n  const [currentIndex, setCurrentIndex] = useState(0);\n  const [selected, setSelected] = useState(false);\n\n  // controls shuffle\n  // const [shuffled, setShuffle] = useState(false);\n  const [flashcards, setFlashcards] = useState(initialFlashcards);\n\n  // controls which alphabets are shown on the front of the flashcard\n  const [showRomaji, setShowRomaji] = useState(false);\n  const [showKanji, setShowKanji] = useState(false);\n  const [showKana, setShowKana] = useState(false);\n\n  // add states for checkboxes for 3 different japanese alphabets\n  // pull from database\n\n  const shuffleFlashcards = () => {\n    const shuffledFlashcards = [...flashcards].sort(() => Math.random() - 0.5);\n    setFlashcards(shuffledFlashcards);\n    setCurrentIndex(0);\n  };\n  const nextCard = () => {\n    setCurrentIndex(prevIndex => (prevIndex + 1) % flashcards.length);\n  };\n  const prevCard = () => {\n    setCurrentIndex(prevIndex => prevIndex === 0 ? flashcards.length - 1 : prevIndex - 1);\n  };\n  const setFirstCard = () => {\n    setCurrentIndex(0);\n  };\n  const setLastCard = () => {\n    setCurrentIndex(flashcards.length - 1);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"page-title\",\n      children: \"Flashcards\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Flashcard, {\n      frontContent: flashcards[currentIndex].front,\n      backContent: flashcards[currentIndex].back + \" \" + currentIndex\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: setFirstCard,\n        children: \"<<\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: prevCard,\n        children: \"<\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: nextCard,\n        children: \">\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: setLastCard,\n        children: \">>\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: shuffleFlashcards,\n        children: \">>\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 17\n      }, this), currentIndex + 1, \" / \", flashcards.length, /*#__PURE__*/_jsxDEV(ToggleButton, {\n        value: \"check\",\n        selected: selected,\n        onChange: () => setSelected(prevSelected => !prevSelected),\n        children: /*#__PURE__*/_jsxDEV(\"img\", {\n          src: selected ? back_toggle_image : front_toggle_image,\n          alt: \"Toggle between the front and back of the card\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(ToggleButton, {\n        value: \"check\",\n        selected: shuffled,\n        onChange: () => shuffleFlashcards(prevSelected => !prevSelected),\n        children: /*#__PURE__*/_jsxDEV(\"img\", {\n          src: shuffled ? shuffle_on_icon : shuffle_icon,\n          alt: \"Toggle shuffling the flashcards\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(ToggleButton, {\n        value: \"check\",\n        selected: showRomaji,\n        onChange: () => setShowRomaji(prevSelected => !prevSelected),\n        children: \"Romaji\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(ToggleButton, {\n        value: \"check\",\n        selected: showKanji,\n        onChange: () => setShowKanji(prevSelected => !prevSelected),\n        children: \"Kanji\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(ToggleButton, {\n        value: \"check\",\n        selected: showKana,\n        onChange: () => setShowKana(prevSelected => !prevSelected),\n        children: \"Kana\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 67,\n    columnNumber: 9\n  }, this);\n}\n_s(Flashcards, \"pjtexv6lzEAU41g/XwjFus/GTpI=\");\n_c = Flashcards;\nvar _c;\n$RefreshReg$(_c, \"Flashcards\");","map":{"version":3,"names":["React","useState","Flashcard","ToggleButton","front_toggle_image","back_toggle_image","shuffle_icon","shuffle_on_icon","jsxDEV","_jsxDEV","Flashcards","_s","initialFlashcards","front","back","currentIndex","setCurrentIndex","selected","setSelected","flashcards","setFlashcards","showRomaji","setShowRomaji","showKanji","setShowKanji","showKana","setShowKana","shuffleFlashcards","shuffledFlashcards","sort","Math","random","nextCard","prevIndex","length","prevCard","setFirstCard","setLastCard","children","className","fileName","_jsxFileName","lineNumber","columnNumber","frontContent","backContent","onClick","value","onChange","prevSelected","src","alt","shuffled","_c","$RefreshReg$"],"sources":["D:/source/repos/Yomi/JapaneseReadingWebsite/yomi/client/src/pages/Flashcards.jsx"],"sourcesContent":["import React, {useState} from 'react';\r\nimport { Flashcard } from '../components/Flashcard.js';\r\nimport '../flashcard.css';\r\nimport { ToggleButton } from '@mui/material';\r\nimport front_toggle_image from '../icons/front_toggle.png';\r\nimport back_toggle_image from '../icons/back_toggle.png';\r\nimport shuffle_icon from '../icons/shuffle_icon.png';\r\nimport shuffle_on_icon from '../icons/shuffle_on_icon.png';\r\n\r\nexport function Flashcards() {\r\n\r\n    // when shuffled, change the flashcards to a new set that is shuffled randomely. \r\n    // when shuffle toggled off, return to normal flashcards logic\r\n    // change flashcard logic so that the front of a flashcard can show up to 3 different japanese alphabets\r\n\r\n\r\n\r\n    // replace this logic with database calls to get the flashcards\r\n    const initialFlashcards = [\r\n        { front: \"ichi\", back: \"one\"},\r\n        { front: \"ni\", back: \"two\"},\r\n        { front: \"san\", back: \"three\"},\r\n        { front: \"shi\", back: \"four\"},\r\n        { front: \"go\", back: \"five\"},\r\n    ];\r\n\r\n    // controls which flashcard is shown\r\n    const [currentIndex, setCurrentIndex] = useState(0);\r\n    const [selected, setSelected] = useState(false);\r\n\r\n    // controls shuffle\r\n    // const [shuffled, setShuffle] = useState(false);\r\n    const [flashcards, setFlashcards] = useState(initialFlashcards);\r\n\r\n    // controls which alphabets are shown on the front of the flashcard\r\n    const [showRomaji, setShowRomaji] = useState(false);\r\n    const [showKanji, setShowKanji] = useState(false);\r\n    const [showKana, setShowKana] = useState(false);\r\n    \r\n\r\n    // add states for checkboxes for 3 different japanese alphabets\r\n    // pull from database\r\n\r\n    const shuffleFlashcards = () => {\r\n        const shuffledFlashcards = [...flashcards].sort(() => Math.random() - 0.5);\r\n        setFlashcards(shuffledFlashcards);\r\n        setCurrentIndex(0);\r\n    }\r\n\r\n    const nextCard = () => {\r\n        setCurrentIndex((prevIndex) => (prevIndex + 1) % flashcards.length);\r\n    };\r\n\r\n    const prevCard = () => {\r\n        setCurrentIndex((prevIndex) => prevIndex === 0 ? flashcards.length - 1 : prevIndex - 1);\r\n    };\r\n\r\n    const setFirstCard = () => {\r\n        setCurrentIndex(0);\r\n    }\r\n\r\n    const setLastCard = () => {\r\n        setCurrentIndex(flashcards.length - 1);\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <h1 className='page-title'>Flashcards</h1>\r\n            <Flashcard \r\n                frontContent={flashcards[currentIndex].front}\r\n                backContent={flashcards[currentIndex].back + \" \" + currentIndex}\r\n            />\r\n            <div>\r\n                <button onClick={setFirstCard}>&lt;&lt;</button>\r\n                <button onClick={prevCard}>&lt;</button>\r\n                <button onClick={nextCard}>&gt;</button>\r\n                <button onClick={setLastCard}>&gt;&gt;</button>\r\n                <button onClick={shuffleFlashcards}>&gt;&gt;</button>\r\n                {currentIndex + 1} / {flashcards.length}\r\n                <ToggleButton value=\"check\" selected={selected} onChange={() => setSelected((prevSelected) => !prevSelected)}>\r\n                    <img src={selected ? back_toggle_image : front_toggle_image} alt=\"Toggle between the front and back of the card\" />\r\n                </ToggleButton>\r\n                <ToggleButton value=\"check\" selected={shuffled} onChange={() => shuffleFlashcards((prevSelected) => !prevSelected)}>\r\n                    <img src={shuffled ? shuffle_on_icon : shuffle_icon} alt=\"Toggle shuffling the flashcards\" />\r\n                </ToggleButton>\r\n                <ToggleButton value=\"check\" selected={showRomaji} onChange={() => setShowRomaji((prevSelected) => !prevSelected)}>\r\n                    Romaji\r\n                </ToggleButton>\r\n                <ToggleButton value=\"check\" selected={showKanji} onChange={() => setShowKanji((prevSelected) => !prevSelected)}>\r\n                    Kanji\r\n                </ToggleButton>\r\n                <ToggleButton value=\"check\" selected={showKana} onChange={() => setShowKana((prevSelected) => !prevSelected)}>\r\n                    Kana\r\n                </ToggleButton>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\n\r\n  "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}