{"ast":null,"code":"var _jsxFileName = \"D:\\\\source\\\\repos\\\\Yomi\\\\JapaneseReadingWebsite\\\\yomi\\\\client\\\\src\\\\pages\\\\Vocab.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport { useLocation } from \"react-router\";\nimport supabase from \"../supabaseclient.js\";\nimport Table from '@mui/material/Table';\nimport TableBody from '@mui/material/TableBody';\nimport TableCell from '@mui/material/TableCell';\nimport TableContainer from '@mui/material/TableContainer';\nimport TableHead from '@mui/material/TableHead';\nimport TableRow from '@mui/material/TableRow';\nimport Paper from '@mui/material/Paper';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Vocab() {\n  _s();\n  // get lesson # from URL\n  const location = useLocation();\n  const searchParams = new URLSearchParams(location.search);\n  const lesson = searchParams.get(\"lesson\");\n\n  // all words for this lesson\n  const [wordList, setWords] = useState([{\n    id: 0,\n    kana: \"loading\",\n    kanji: \"loading\",\n    English: \"loading\"\n  }]);\n\n  // get words from DB\n  useEffect(() => {\n    async function getWords() {\n      const {\n        data,\n        error\n      } = await supabase.from(\"Words\").select(`id, kana, kanji, English`).eq(\"lesson\", lesson);\n      if (error) {\n        console.warn(error);\n      } else if (data) {\n        addWordNum(data); // sets words, but also adds indices\n      }\n    }\n    getWords();\n  }, [lesson]);\n  function addWordNum(data) {\n    let data2 = data.slice();\n    data.map((row, index) => {\n      data2[index] = {\n        index: index,\n        ...row\n      };\n    });\n    setWords(data2);\n  }\n\n  // display in table (map function)\n  return /*#__PURE__*/_jsxDEV(TableContainer, {\n    component: Paper,\n    children: /*#__PURE__*/_jsxDEV(Table, {\n      sx: {\n        maxWidth: \"sm\",\n        margin: \"auto\"\n      },\n      size: \"small\",\n      \"aria-label\": \"simple table\",\n      children: [/*#__PURE__*/_jsxDEV(TableHead, {\n        children: /*#__PURE__*/_jsxDEV(TableRow, {\n          children: [/*#__PURE__*/_jsxDEV(TableCell, {\n            children: \"#\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 52,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n            children: \"English\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 53,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n            children: \"\\u6F22\\u5B57\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 54,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n            children: \"\\u30AB\\u30CA\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 55,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(TableBody, {\n        children: wordList.map(row => /*#__PURE__*/_jsxDEV(TableRow, {\n          sx: {\n            '&:last-child td, &:last-child th': {\n              border: 0\n            }\n          },\n          children: [/*#__PURE__*/_jsxDEV(TableCell, {\n            children: row.index\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 64,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n            children: row.English\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 65,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n            component: \"th\",\n            scope: \"row\",\n            children: row.kanji\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 66,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n            children: row.kana\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 67,\n            columnNumber: 17\n          }, this)]\n        }, row.kanji, true, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 17\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 48,\n    columnNumber: 9\n  }, this);\n}\n_s(Vocab, \"7FSwxneXAt0TaMY36Fo46oslqXc=\", false, function () {\n  return [useLocation];\n});\n_c = Vocab;\n;\nexport default Vocab;\nvar _c;\n$RefreshReg$(_c, \"Vocab\");","map":{"version":3,"names":["React","useState","useEffect","useLocation","supabase","Table","TableBody","TableCell","TableContainer","TableHead","TableRow","Paper","jsxDEV","_jsxDEV","Vocab","_s","location","searchParams","URLSearchParams","search","lesson","get","wordList","setWords","id","kana","kanji","English","getWords","data","error","from","select","eq","console","warn","addWordNum","data2","slice","map","row","index","component","children","sx","maxWidth","margin","size","fileName","_jsxFileName","lineNumber","columnNumber","border","scope","_c","$RefreshReg$"],"sources":["D:/source/repos/Yomi/JapaneseReadingWebsite/yomi/client/src/pages/Vocab.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport { useLocation } from \"react-router\";\r\nimport supabase from \"../supabaseclient.js\";\r\nimport Table from '@mui/material/Table';\r\nimport TableBody from '@mui/material/TableBody';\r\nimport TableCell from '@mui/material/TableCell';\r\nimport TableContainer from '@mui/material/TableContainer';\r\nimport TableHead from '@mui/material/TableHead';\r\nimport TableRow from '@mui/material/TableRow';\r\nimport Paper from '@mui/material/Paper';\r\n\r\nfunction Vocab () {\r\n    // get lesson # from URL\r\n    const location = useLocation();\r\n    const searchParams = new URLSearchParams(location.search);\r\n    const lesson = searchParams.get(\"lesson\");\r\n\r\n    // all words for this lesson\r\n    const [wordList, setWords] = useState([{ id: 0, kana: \"loading\", kanji: \"loading\", English: \"loading\" }]);\r\n\r\n    // get words from DB\r\n    useEffect(() => {\r\n        async function getWords() {\r\n        const { data, error } = await supabase\r\n            .from(\"Words\")\r\n            .select(`id, kana, kanji, English`)\r\n            .eq(\"lesson\", lesson);\r\n        if (error) {\r\n            console.warn(error);\r\n        } else if (data) {\r\n            addWordNum(data); // sets words, but also adds indices\r\n        }\r\n        }\r\n\r\n        getWords();\r\n    }, [lesson]);\r\n\r\n    function addWordNum(data) {\r\n        let data2 = data.slice();\r\n        data.map((row, index) => {\r\n            data2[index] = {index: index, ...row};\r\n        })\r\n        setWords(data2);\r\n    }\r\n\r\n    // display in table (map function)\r\n    return (\r\n        <TableContainer component={Paper}>\r\n        <Table sx={{ maxWidth: \"sm\", margin: \"auto\" }} size=\"small\" aria-label=\"simple table\">\r\n            <TableHead>\r\n            <TableRow>\r\n                <TableCell>#</TableCell>\r\n                <TableCell>English</TableCell>\r\n                <TableCell>漢字</TableCell>\r\n                <TableCell>カナ</TableCell>\r\n            </TableRow>\r\n            </TableHead>\r\n            <TableBody>\r\n            {wordList.map((row) => (\r\n                <TableRow\r\n                key={row.kanji}\r\n                sx={{ '&:last-child td, &:last-child th': { border: 0 } }}\r\n                >\r\n                <TableCell>{row.index}</TableCell>\r\n                <TableCell>{row.English}</TableCell>\r\n                <TableCell component=\"th\" scope=\"row\">{row.kanji}</TableCell>\r\n                <TableCell>{row.kana}</TableCell>\r\n                </TableRow>\r\n            ))}\r\n            </TableBody>\r\n        </Table>\r\n        </TableContainer>\r\n    );\r\n};\r\n\r\nexport default Vocab;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,SAASC,WAAW,QAAQ,cAAc;AAC1C,OAAOC,QAAQ,MAAM,sBAAsB;AAC3C,OAAOC,KAAK,MAAM,qBAAqB;AACvC,OAAOC,SAAS,MAAM,yBAAyB;AAC/C,OAAOC,SAAS,MAAM,yBAAyB;AAC/C,OAAOC,cAAc,MAAM,8BAA8B;AACzD,OAAOC,SAAS,MAAM,yBAAyB;AAC/C,OAAOC,QAAQ,MAAM,wBAAwB;AAC7C,OAAOC,KAAK,MAAM,qBAAqB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAExC,SAASC,KAAKA,CAAA,EAAI;EAAAC,EAAA;EACd;EACA,MAAMC,QAAQ,GAAGb,WAAW,CAAC,CAAC;EAC9B,MAAMc,YAAY,GAAG,IAAIC,eAAe,CAACF,QAAQ,CAACG,MAAM,CAAC;EACzD,MAAMC,MAAM,GAAGH,YAAY,CAACI,GAAG,CAAC,QAAQ,CAAC;;EAEzC;EACA,MAAM,CAACC,QAAQ,EAAEC,QAAQ,CAAC,GAAGtB,QAAQ,CAAC,CAAC;IAAEuB,EAAE,EAAE,CAAC;IAAEC,IAAI,EAAE,SAAS;IAAEC,KAAK,EAAE,SAAS;IAAEC,OAAO,EAAE;EAAU,CAAC,CAAC,CAAC;;EAEzG;EACAzB,SAAS,CAAC,MAAM;IACZ,eAAe0B,QAAQA,CAAA,EAAG;MAC1B,MAAM;QAAEC,IAAI;QAAEC;MAAM,CAAC,GAAG,MAAM1B,QAAQ,CACjC2B,IAAI,CAAC,OAAO,CAAC,CACbC,MAAM,CAAC,0BAA0B,CAAC,CAClCC,EAAE,CAAC,QAAQ,EAAEb,MAAM,CAAC;MACzB,IAAIU,KAAK,EAAE;QACPI,OAAO,CAACC,IAAI,CAACL,KAAK,CAAC;MACvB,CAAC,MAAM,IAAID,IAAI,EAAE;QACbO,UAAU,CAACP,IAAI,CAAC,CAAC,CAAC;MACtB;IACA;IAEAD,QAAQ,CAAC,CAAC;EACd,CAAC,EAAE,CAACR,MAAM,CAAC,CAAC;EAEZ,SAASgB,UAAUA,CAACP,IAAI,EAAE;IACtB,IAAIQ,KAAK,GAAGR,IAAI,CAACS,KAAK,CAAC,CAAC;IACxBT,IAAI,CAACU,GAAG,CAAC,CAACC,GAAG,EAAEC,KAAK,KAAK;MACrBJ,KAAK,CAACI,KAAK,CAAC,GAAG;QAACA,KAAK,EAAEA,KAAK;QAAE,GAAGD;MAAG,CAAC;IACzC,CAAC,CAAC;IACFjB,QAAQ,CAACc,KAAK,CAAC;EACnB;;EAEA;EACA,oBACIxB,OAAA,CAACL,cAAc;IAACkC,SAAS,EAAE/B,KAAM;IAAAgC,QAAA,eACjC9B,OAAA,CAACR,KAAK;MAACuC,EAAE,EAAE;QAAEC,QAAQ,EAAE,IAAI;QAAEC,MAAM,EAAE;MAAO,CAAE;MAACC,IAAI,EAAC,OAAO;MAAC,cAAW,cAAc;MAAAJ,QAAA,gBACjF9B,OAAA,CAACJ,SAAS;QAAAkC,QAAA,eACV9B,OAAA,CAACH,QAAQ;UAAAiC,QAAA,gBACL9B,OAAA,CAACN,SAAS;YAAAoC,QAAA,EAAC;UAAC;YAAAK,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAW,CAAC,eACxBtC,OAAA,CAACN,SAAS;YAAAoC,QAAA,EAAC;UAAO;YAAAK,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAW,CAAC,eAC9BtC,OAAA,CAACN,SAAS;YAAAoC,QAAA,EAAC;UAAE;YAAAK,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAW,CAAC,eACzBtC,OAAA,CAACN,SAAS;YAAAoC,QAAA,EAAC;UAAE;YAAAK,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAW,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACnB;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACA,CAAC,eACZtC,OAAA,CAACP,SAAS;QAAAqC,QAAA,EACTrB,QAAQ,CAACiB,GAAG,CAAEC,GAAG,iBACd3B,OAAA,CAACH,QAAQ;UAETkC,EAAE,EAAE;YAAE,kCAAkC,EAAE;cAAEQ,MAAM,EAAE;YAAE;UAAE,CAAE;UAAAT,QAAA,gBAE1D9B,OAAA,CAACN,SAAS;YAAAoC,QAAA,EAAEH,GAAG,CAACC;UAAK;YAAAO,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAY,CAAC,eAClCtC,OAAA,CAACN,SAAS;YAAAoC,QAAA,EAAEH,GAAG,CAACb;UAAO;YAAAqB,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAY,CAAC,eACpCtC,OAAA,CAACN,SAAS;YAACmC,SAAS,EAAC,IAAI;YAACW,KAAK,EAAC,KAAK;YAAAV,QAAA,EAAEH,GAAG,CAACd;UAAK;YAAAsB,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAY,CAAC,eAC7DtC,OAAA,CAACN,SAAS;YAAAoC,QAAA,EAAEH,GAAG,CAACf;UAAI;YAAAuB,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAY,CAAC;QAAA,GAN5BX,GAAG,CAACd,KAAK;UAAAsB,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAOJ,CACb;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACS,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACT;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACQ,CAAC;AAEzB;AAACpC,EAAA,CA9DQD,KAAK;EAAA,QAEOX,WAAW;AAAA;AAAAmD,EAAA,GAFvBxC,KAAK;AA8Db;AAED,eAAeA,KAAK;AAAC,IAAAwC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}